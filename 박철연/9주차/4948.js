// 베르트랑 공준은 임의의 자연수 n에 대하여, n보다 크고, 2n보다 작거나 같은 소수는 적어도 하나 존재한다는 내용을 담고 있다.

// 이 명제는 조제프 베르트랑이 1845년에 추측했고, 파프누티 체비쇼프가 1850년에 증명했다.

// 예를 들어, 10보다 크고, 20보다 작거나 같은 소수는 4개가 있다. (11, 13, 17, 19) 또, 14보다 크고, 28보다 작거나 같은 소수는 3개가 있다. (17,19, 23)

// 자연수 n이 주어졌을 때, n보다 크고, 2n보다 작거나 같은 소수의 개수를 구하는 프로그램을 작성하시오.

const input = require("fs").readFileSync("dev/stdin").toString();
const num = Number(input);
let count = 0;

for (let i = num; i <= num * 2; i++) {
  let isPrime = true;
  for (let j = i - 1; j > 1; j--) {
    if (i % j === 0) {
      isPrime = false;
      break;
    }
    if (j === 2 && isPrime) count++;
  }
}

if (num === 1) {
  count = 1;
}

console.log(count);

// 에라토스테네스의 체
// 자연수 n이 소수려면 n보다 작은 자연수로 나눠떨어지지 않으면 됨
// 체에 거르듯이 2부터 시작해서, 2의 배수들을 리스트에서 제거하는 식으로 체를 한 번 거름
// 위의 소수 정의를 근거로 체를 한 번 거르고도 남은 다음 숫자는 자동적으로 소수임이 보장됨
